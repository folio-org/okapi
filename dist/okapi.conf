#
# FOLIO Okapi configuration
#

#  Okapi requires exactly one command to be given depending on how
#  it is utilized.
#
# 'cluster' - for running in clustered mode/production
# 'dev' - for running in development, single-node mode
# 'deployment' - for okapi deployment only. Clustered mode
# 'proxy' -  for proxy + discovery. Clustered mode
#
#
role="cluster"

# 'cluster' config options
#
# -hazelcast-config-cp file -- Read config from class path
# -hazelcast-config-file file -- Read config from local file
# -hazelcast-config-url url -- Read config from URL
#
#cluster_config="-hazelcast-config-file /etc/folio/okapi/hazelcast.xml"

# Specify the network interface Vertx cluster should bind to.
# By default, it will bind to all network interfaces.  This may have
# unintended consequences.
#cluster_interface="eth0"

# Specify which port the cluster should bind to for cluster
# communication.  (Note: This different from '5701' which is used for
# cluster discovery).  If not set, a random port will be used.
#cluster_port="9001"

# Enable the sending of various metrics to a Carbon back end.
# Boolean '0' or '1'. Set to '1' to enable and set Carbon/Graphite
# host and port.
enable_metrics=0
carbon_host="localhost"
carbon_port="2003"

# Default okapi port
port="9130"

# Define port range for modules. Default range: 9131-9141.
port_start="9131"
port_end="9141"

# Hostname to be used in the URLs returned by the deployment service.
# Defaults to 'localhost'
host="localhost"

# Set '-Dnodename'.  Required for deployment persistence when
# running Okapi in cluster mode.  Defaults to `/bin/hostname`
#nodename=

# Define the storage back end - 'postgres' or 'inmemory'
# ('postgres' only valid when 'role' is set to 'cluster' or 'dev')
# (valid only when 'role' is set to 'dev' or 'cluster')
# If set to 'postgres', make sure the okapi database has been
# created and okapi user has been configured in the postgres
# instance and then run:
#   /usr/share/folio/okapi/bin/okapi.sh --initdb
# to initialize the okapi database for restarting okapi.
storage="inmemory"

# Set Postgres parameters.  Ignored unless 'storage="postgres"'
postgres_host="localhost"   # default 'localhost'
postgres_port="5432"        # default postgres port
postgres_username="okapi"   # default
postgres_password="okapi25" # default
postgres_database="okapi"   # default

# Define Docker URL if we are deploying modules via Docker.
dockerurl="http://localhost:4243"

# Tell Okapi its own official URL.  This gets passed to the
# modules as X-Okapi-Url header, and the modules can use this
# to make further requests to Okapi.  Defaults to 'http://localhost:9130'
# or whatever port specified. There should be no trailing slash, but if
# there happens to be one, Okapi will remove it.
okapiurl="http://localhost:9130"

# Okapi Logging options
#
# Define logging level.  Defaults to 'INFO'; other valid values are 'DEBUG',
# 'TRACE', 'WARN', and 'ERROR'
loglevel="INFO"

# Specify external log4j2 configuration file.  Otherwise logging defaults
# to STDOUT.  If defined, 'loglevel' is ignored.
log4j_config="/etc/folio/okapi/log4j2.properties"

# Vert.x cache for classpath resource files
# https://vertx.io/docs/vertx-core/java/#classpath
vertx_cache_dir_base="/tmp/vertx-cache-okapi"

# Set dockerRegistries for Okapi to pull images
# Default is to leave unset (pull images from Docker Hub unauthenticated)
# See https://github.com/folio-org/okapi/blob/master/doc/guide.md#okapi-configuration
# JSON-encoded array of objects
# Sample configuration:
# docker_registries='
#[
#  {
#    "username": "dockeruser",
#    "password": "secret",
#    "email": "foo@example.com"
#  }
#]
#'
