#%RAML 1.0
title: Okapi Core API
version: 2.0
types:
  DeploymentDescriptor: !include DeploymentDescriptor.json
  LaunchDescriptor: !include LaunchDescriptor.json
  DeploymentDescriptorList: !include DeploymentDescriptorList.json
  ModuleDescriptor: !include ModuleDescriptor.json
  ModuleList: !include ModuleList.json
  InterfaceDescriptor: !include InterfaceDescriptor.json
  InterfaceList: !include InterfaceList.json
  RoutingEntry: !include RoutingEntry.json
  TimerDescriptor: !include TimerDescriptor.json
  TimerDescriptorList: !include TimerDescriptorList.json
  InstallJob: !include InstallJob.json
  InstallJobList: !include InstallJobList.json
  TenantDescriptor: !include TenantDescriptor.json
  TenantList: !include TenantList.json
  TenantModuleDescriptor: !include TenantModuleDescriptor.json
  TenantModuleDescriptorList: !include TenantModuleDescriptorList.json
  HealthStatus: !include HealthStatus.json
  HealthStatusList: !include HealthStatusList.json
  HealthDescriptor: !include HealthDescriptor.json
  HealthDescriptorList: !include HealthDescriptorList.json
  NodeDescriptor: !include NodeDescriptor.json
  NodeDescriptorList: !include NodeDescriptorList.json
  EnvEntry: !include EnvEntry.json
  EnvEntryList: !include EnvEntryList.json
  Permission: !include Permission.json
  PullDescriptor: !include PullDescriptor.json

traits:
  versionFilters:
    queryParameters:
      preRelease:
        description:
          Whether to use pre-release in operation. "true"&#58; use all
          modules; "false"&#58; releases (no pre-releases); "only"&#58; only pre-releases
        enum: ["true","false","only"]
        required: false
        default: "true"
      npmSnapshot:
        description:
          Whether to use NPM module snapshots in operation. "true"&#58; use all
          modules; "false"&#58; releases (no NPM snapshots); "only"&#58; only NPM snapshots
        enum: ["true","false","only"]
        required: false
        default: "true"
  installParameters:
    queryParameters:
      async:
        description: Whether to install in the background
        type: boolean
        required: false
        default: false
      deploy:
        description: Whether to deploy (or undeploy if disabling)
        type: boolean
        required: false
        default: false
      ignoreErrors:
        description: |
          Okapi 4.2.0 and later, it is possible to ignore errors during the
          install operation. This is done by supplying parameter `ignoreErrors=true`.
          In this case, Okapi will try to upgrade all
          modules in the modules list, regardless if one of them fails. However,
          for individual modules, if they fail, their upgrade will not be commited.
          This is an experimental parameter which was added to be able to inspect
          all problem(s) with module upgrade(s).
        type: boolean
        required: false
        default: false
      invoke:
        description: |
         Whether to invoke for tenant init/permissions/purge. Use
          "true" to invoke, "false" to not invoke. Any other value
          is a regular expression that is matched against the module ID.
          If that pattern matches, invoke is performed (same as "true").
        type: string
        required: false
        default: "true"
      parallel:
        description: |
          Number of parallel calls to tenant interfaces of modules.
          A value of 1 means calls are happening in sequence.
        type: integer
        required: false
        default: 1
        minimum: 1
      purge:
        description: Disabled modules will also be purged.
        type: boolean
        required: false
        default: false
      reinstall:
        description: Whether to install modules even if up-to-update
        type: boolean
        required: false
        default: false
      simulate:
        description: Whether the installation is simulated
        type: boolean
        required: false
        default: false
      tenantParameters:
        description: Parameters for Tenant init
        type: string
        required: false

/_/deployment/modules:
  description: |
    Deployment service. This is responsible for starting and stopping modules.
  post:
    description: |
      Deploy (launch process, start a container, etc) instance of a
      particular service, according to the deployment descriptor.
    body:
      application/json:
        type: DeploymentDescriptor
    responses:
      201:
        description: Created
        headers:
          Location:
            description: URI to the descriptor of the deployed instance
          X-Okapi-Trace:
            required: false
            description: Okapi trace and timing
        body:
          application/json:
            type: DeploymentDescriptor
      400:
        description: Bad Request
        body:
          text/plain:
      404:
        description: Not Found
        body:
          text/plain:
      500:
        description: Server Error
        body:
          text/plain:
  get:
    description: List all deployed instances
    responses:
      200:
        body:
          application/json:
            type: DeploymentDescriptorList
        headers:
          X-Okapi-Trace:
            required: false
            description: Okapi trace and timing
  /{instance_id}:
    get:
      description: Retrieve deployment descriptor for a particular instance
      responses:
        200:
          body:
            application/json:
              type: DeploymentDescriptor
          headers:
            X-Okapi-Trace:
              required: false
              description: Okapi trace and timing
        404:
          description: Not Found
          body:
            text/plain:
    delete:
      description: Shutdown instance
      responses:
        204:
          headers:
            X-Okapi-Trace:
              required: false
              description: Okapi trace and timing

/_/discovery/modules:
  description: |
    Discovery service. This is responsible for monitoring all instances
    (deployed) on, possibly many, deployment nodes.
  post:
    description: Register instance under a specified service id
    body:
      application/json:
        type: DeploymentDescriptor
    responses:
      201:
        description: Created
        headers:
          Location:
            description: URI to the registered instance
          X-Okapi-Trace:
            required: false
            description: Okapi trace and timing
        body:
          application/json:
            type: DeploymentDescriptor
      400:
        description: Bad Request
        body:
          text/plain:
      404:
        description: Not Found
        body:
          text/plain:
      500:
        description: Server Error
        body:
          text/plain:
  get:
    description: Return all instances
    responses:
      200:
        description: OK
        headers:
          X-Okapi-Trace:
            required: false
            description: Okapi trace and timing
        body:
          application/json:
            type: DeploymentDescriptorList
      400:
        description: Bad Request
        body:
          text/plain:
      500:
        description: Server Error
        body:
          text/plain:
  delete:
    description: Delete all instances
    responses:
      204:
        description: OK
        headers:
          X-Okapi-Trace:
            required: false
            description: Okapi trace and timing
      400:
        description: Bad Request
        body:
          text/plain:
      500:
        description: Server Error
        body:
          text/plain:
  /{service_id}:
    get:
      description: List all instances for a particular service
      responses:
        200:
          body:
            application/json:
              type: DeploymentDescriptorList
          headers:
            X-Okapi-Trace:
              required: false
              description: Okapi trace and timing
        400:
          description: Bad Request
          body:
            text/plain:
        404:
          description: Not Found
          body:
            text/plain:
        500:
          description: Server Error
          body:
            text/plain:
    delete:
      description: Remove registration for a given instance
      responses:
        204:
          description: No Content
          headers:
            X-Okapi-Trace:
              required: false
              description: Okapi trace and timing
        404:
          description: Not Found
          body:
            text/plain:
    /{instance_id}:
      get:
        description: Get registration of a specified instance
        responses:
          200:
            body:
              application/json:
                type: DeploymentDescriptor
            headers:
              X-Okapi-Trace:
                required: false
                description: Okapi trace and timing
          404:
            description: Not Found
            body:
              text/plain:
      delete:
        description: Remove registration for a given instance
        responses:
          204:
            headers:
              X-Okapi-Trace:
                required: false
                description: Okapi trace and timing
          404:
            description: Not Found
            body:
              text/plain:
/_/discovery/health:
  description: Health service for individual instances
  get:
    description: Get health info for all services
    responses:
      200:
        body:
          application/json:
            type: HealthDescriptorList
        headers:
          X-Okapi-Trace:
            required: false
            description: Okapi trace and timing
      400:
        description: Bad Request
        body:
          text/plain:
      500:
        description: Server Error
        body:
          text/plain:
  /{service_id}:
    get:
      description: Health for all instances for a particular service
      responses:
        200:
          body:
            application/json:
              type: HealthDescriptorList
          headers:
            X-Okapi-Trace:
              required: false
              description: Okapi trace and timing
        404:
          description: Not Found
          body:
            text/plain:
    /{instance_id}:
      get:
        description: Get health for a particular instance
        responses:
          200:
            body:
              application/json:
                type: HealthDescriptor
            headers:
              X-Okapi-Trace:
                required: false
                description: Okapi trace and timing
          404:
            description: Not Found
            body:
              text/plain:
/_/discovery/nodes:
  description: Get information about nodes
  get:
    description: Get list of all nodes
    responses:
      200:
        body:
          application/json:
            type: NodeDescriptorList
        headers:
          X-Okapi-Trace:
            required: false
            description: Okapi trace and timing
      400:
        description: Bad Request
        body:
          text/plain:
      500:
        description: Server Error
        body:
          text/plain:
  /{node_id}:
    put:
      description: Update descriptor of a particular node, only the name can be changed
      body:
        application/json:
          type: NodeDescriptor
      responses:
        200:
          headers:
            X-Okapi-Trace:
              required: false
              description: Okapi trace and timing
          body:
            application/json:
              type: NodeDescriptor
        400:
          description: Bad Request
          body:
            text/plain:
        404:
          description: Not Found
          body:
            text/plain:
        500:
          description: Server Error
          body:
            text/plain:
    get:
      description: Get info for one node
      responses:
        200:
          body:
            application/json:
              type: NodeDescriptor
          headers:
            X-Okapi-Trace:
              required: false
              description: Okapi trace and timing
        400:
          description: Bad Request
          body:
            text/plain:
        404:
          description: Not Found
          body:
            text/plain:
        500:
          description: Server Error
          body:
            text/plain:

/_/proxy/import/modules:
  description: Proxy modules service, list import
  post:
    is: [
      versionFilters
    ]
    description: Announce a list of new modules to the proxy. Once successful a module
      can be selected for a specific tenant. To announce only one module you may use
      /_/proxy/modules.
    queryParameters:
      check:
        description: Whether to check dependencies
        type: boolean
        required: false
        default: true
    body:
      application/json:
        type: ModuleList
    responses:
      204:
        description: OK
        headers:
          X-Okapi-Trace:
            required: false
            description: Okapi trace and timing
      400:
        description: Bad Request
        body:
          text/plain:
      404:
        description: Not Found
        body:
          text/plain:
      500:
        description: Server Error
        body:
          text/plain:

/_/proxy/cleanup/modules:
  description: Proxy modules service, clean up obsolete snapshot modules
  post:
    description: Remove module snapshot modules descriptors that are obsolete. A module is
      considered obsolete if it is part of a release that is earlier than N latest releases (saveReleases) and
      not part of the M latest snapshots in that release.
    queryParameters:
      removeDependencies:
        description: Force removal of modules that depend on obsolete snapshots
        type: boolean
        required: false
        default: false
      saveReleases:
        description: The number of latest releases where snapshots are never considered obsolete
        type: integer
        required: true
      saveSnapshots:
        description: The number of latest snapshots that are never considered obsolete (preserved)
        type: integer
        required: true
    responses:
      204:
        description: OK
        headers:
          X-Okapi-Trace:
            required: true
            description: Okapi trace and timing
      400:
        description: Bad Request
        body:
          text/plain:
      404:
        description: Not Found
        body:
          text/plain:
      500:
        description: Server Error
        body:
          text/plain:

/_/proxy/modules:
  description: Proxy modules service
  post:
    is: [
      versionFilters
    ]
    description: Announce new module to the proxy. Once successful a module
      can be selected for a specific tenant.
    queryParameters:
      check:
        description: Whether to check dependencies
        type: boolean
        required: false
        default: true
    body:
      application/json:
        type: ModuleDescriptor
    responses:
      201:
        description: Created
        headers:
          X-Okapi-Trace:
            required: false
            description: Okapi trace and timing
          Location:
            description: URI to the created module instance
        body:
          application/json:
            type: ModuleDescriptor
      400:
        description: Bad Request
        body:
          text/plain:
      500:
        description: Server Error
        body:
          text/plain:
  get:
    is: [
      versionFilters
    ]
    description: List all or subset of modules for proxy
    queryParameters:
      dot:
        description: If true, return Graphviz DOT content as plain text
        type: boolean
        required: false
        default: false
      filter:
        description: Filter by module ID
        type: string
        required: false
      full:
        description: Whether full or compact MD should be returned
        type: boolean
        required: false
        default: false
      latest:
        description: Limit to latest N releases (most likely 1 if given)
        type: integer
        required: false
      order:
        description: Order
        enum: [desc, asc]
        required: false
      orderBy:
        description: Order by field
        type: string
        required: false
      provide:
        description: Limit to provided interfaces (each interface name separated by comma)
        type: string
        required: false
      require:
        description: Limit to required interfaces (each interface name separated by comma)
        type: string
        required: false
      scope:
        description: Limit to interface scope (only useful with provide and require)
        type: string
        required: false
    responses:
      200:
        headers:
          X-Okapi-Trace:
            required: false
            description: Okapi trace and timing
        body:
          application/json:
            type: ModuleList
          text/plain:
      400:
        description: Bad Request
        body:
          text/plain:
      500:
        description: Server Error
        body:
          text/plain:
  /{module_id}:
    get:
      description: Retrieve descriptor for a particular module
      responses:
        200:
          headers:
            X-Okapi-Trace:
              required: false
              description: Okapi trace and timing
          body:
            application/json:
              type: ModuleDescriptor
    delete:
      description: Remove module descriptor for a particular module, module
        will no longer be selectable by tenants
      responses:
        204:
          headers:
            X-Okapi-Trace:
              required: false
              description: Okapi trace and timing
        400:
          description: Bad Request
          body:
            text/plain:
        404:
          description: Not Found
          body:
            text/plain:
/_/proxy/tenants:
  description: Tenants service
  post:
    description: Create a new tenant
    body:
      application/json:
        type: TenantDescriptor
    responses:
      201:
        description: Tenant has been created
        headers:
          X-Okapi-Trace:
            required: false
            description: Okapi trace and timing
          Location:
            description: URI to the created tenant
        body:
          application/json:
            type: TenantDescriptor
      400:
        description: Bad Request
        body:
          text/plain:
  get:
    description: List all tenants
    responses:
      200:
        description: List of tenants in a brief format
        headers:
          X-Okapi-Trace:
            required: false
            description: Okapi trace and timing
        body:
          application/json:
            type: TenantList
  /{tenant_id}:
    get:
      description: Retrieve a tenant
      responses:
        200:
          headers:
            X-Okapi-Trace:
              required: false
              description: Okapi trace and timing
          body:
            application/json:
              type: TenantDescriptor
        404:
          description: Not Found
          body:
            text/plain:
    put:
      description: Update a tenant
      body:
        application/json:
          type: TenantDescriptor
      responses:
        200:
          headers:
            X-Okapi-Trace:
              required: false
              description: Okapi trace and timing
          body:
            application/json:
              type: TenantDescriptor
        400:
          description: Bad Request
          body:
            text/plain:
        404:
          description: Not Found
          body:
            text/plain:
    delete:
      description: Remove a tenant
      responses:
        204:
          headers:
            X-Okapi-Trace:
              required: false
              description: Okapi trace and timing
        400:
          description: Bad Request
          body:
            text/plain:
        403:
          description: Forbidden
          body:
            text/plain:
        404:
          description: Not Found
          body:
            text/plain:
    /modules:
      post:
        description: Enable a module for tenant. Only the member 'id' from
          TenantModuleDescriptor is used in this operation.
          This call will eventually be replaced by the 'install' service.
        body:
          application/json:
            type: TenantModuleDescriptor
        responses:
          201:
            description: Created
            headers:
              X-Okapi-Trace:
                required: false
                description: Okapi trace and timing
              Location:
                description: URI to the enabled module
            body:
              application/json:
                type: TenantModuleDescriptor
          400:
            description: Bad Request
            body:
              text/plain:
          404:
            description: Not Found
            body:
              text/plain:
          500:
            description: Server Error
            body:
              text/plain:
      get:
        is: [
          versionFilters
        ]
        description: Get enabled modules for tenant
        queryParameters:
          dot:
            description: If true, return Graphviz DOT content as plain text
            type: boolean
            required: false
            default: false
          filter:
            description: Filter by module ID
            type: string
            required: false
          full:
            description: Whether full or compact MD should be returned
            type: boolean
            required: false
            default: false
          latest:
            description: Limit to latest N releases (most likely 1 if given)
            type: integer
            required: false
          order:
            description: Order
            enum: [desc, asc]
            required: false
          orderBy:
            description: Order by field
            type: string
            required: false
          provide:
            description: Limit to provided interfaces (each interface name separated by comma)
            type: string
            required: false
          require:
            description: Limit to required interfaces (each interface name separted by comma)

            type: string
            required: false
          scope:
            description: Limit to interface scope (only useful with provide and require)
            type: string
            required: false
        responses:
          200:
            headers:
              X-Okapi-Trace:
                required: false
                description: Okapi trace and timing
            body:
              application/json:
                type: ModuleList
              text/plain:
          404:
            description: Not Found
            body:
              text/plain:
          500:
            description: Server Error
            body:
              text/plain:
      delete:
        description: Disable modules for tenant
        queryParameters:
          invoke:
            description: |
              Whether to invoke for tenant init/permissions/purge. Use
              "true" to invoke, "false" to not invoke. Any other value
              is a regular expression that is matched against the module ID.
              If that pattern matches, invoke is performed (same as "true)".
            type: string
            required: false
            default: "true"
          purge:
            description: Disabled modules will also be purged.
            type: boolean
            required: false
            default: false
          tenantParameters:
            description: Parameters for Tenant init
            type: string
            required: false
        responses:
          204:
            description: OK
            headers:
              X-Okapi-Trace:
                required: false
                description: Okapi trace and timing
          400:
            description: Bad Request
            body:
              text/plain:
          404:
            description: Not Found
            body:
              text/plain:
          500:
            description: Server Error
            body:
              text/plain:
      /{module_id}:
        description: CRUD service for getting module and upgrading module
          for a tenant.
        get:
          description: Look up particular module selection
          responses:
            200:
              headers:
                X-Okapi-Trace:
                  required: false
                  description: Okapi trace and timing
              body:
                application/json:
                  type: TenantModuleDescriptor
            404:
              description: Not Found
              body:
                text/plain:
        post:
          description: Upgrade a module for a tenant. Enable new module and
            disable current module with new module ID in body and existing ID
            in path.
            This call will eventually be replaced by the 'install' service.
          queryParameters:
            invoke:
              description: |
                Whether to invoke for tenant init/permissions/purge. Use
                "true" to invoke, "false" to not invoke. Any other value
                is a regular expression that is matched against the module ID.
                If that pattern matches, invoke is performed (same as "true)".
              type: string
              required: false
              default: "true"
            purge:
              description: Disabled modules will also be purged.
              type: boolean
              required: false
              default: false
            tenantParameters:
              description: Parameters for Tenant init
              type: string
              required: false
          body:
            application/json:
              type: TenantModuleDescriptor
          responses:
            201:
              description: Created
              headers:
                X-Okapi-Trace:
                  required: false
                  description: Okapi trace and timing
                Location:
                  description: URI to the enabled module
              body:
                application/json:
                  type: TenantModuleDescriptor
            400:
              description: Client Error
              body:
                text/plain:
            404:
              description: Not Found
              body:
                text/plain:
            500:
              description: Server Error
              body:
                text/plain:
        delete:
          description: Disable a module for a tenant.
            This call will eventually be replaced by the 'install' service.
          queryParameters:
            invoke:
              description: |
                Whether to invoke for tenant init/permissions/purge. Use
                "true" to invoke, "false" to not invoke. Any other value
                is a regular expression that is matched against the module ID.
                If that pattern matches, invoke is performed (same as "true)".
              type: string
              required: false
              default: "true"
            purge:
              description: Disabled modules will also be purged.
              type: boolean
              required: false
              default: false
            tenantParameters:
              description: Parameters for Tenant init
              type: string
              required: false
          responses:
            204:
              description: Gone
              headers:
                X-Okapi-Trace:
                  required: false
                  description: Okapi trace and timing
            400:
              description: Client Error
              body:
                text/plain:
    /install:
      get:
        description: Retrieve information about all install/upgrade
          jobs - including those that are ongoing.
        responses:
          200:
            description: OK
            body:
              application/json:
                type: InstallJobList
            headers:
              X-Okapi-Trace:
                required: false
                description: Okapi trace and timing
          400:
            description: User error
            body:
              text/plain:
          404:
            description: Tenant not Found
            body:
              text/plain:
          500:
            description: User error
            body:
              text/plain:
      delete:
        description: Delete all completed install jobs
        responses:
          204:
            description: OK
            headers:
              X-Okapi-Trace:
                required: false
                description: Okapi trace and timing
          400:
            description: Bad Request
            body:
              text/plain:
          404:
            description: Tenant not Found
            body:
              text/plain:
          500:
            description: Server Error
            body:
              text/plain:
      post:
        is: [
          versionFilters,
          installParameters
        ]
        description: Enable, disable or upgrade one or more modules for
          tenant. The request body and response body is of the same type
          TenantModuleDescriptorList. This list includes one or more
          modules to be enabled, disabled or upgraded. The request is the
          initial desired changes and the response is the list of changes
          that must be fulfilled to satisfy dependencies.
          This service will eventually partially replace
          /_/proxy/tenants/{tenant}/modules . It also allows
          enabling multiple modules in one transaction.
          For simulate=true, the response, can be viewed as a recipe for what
          must be deployed (optionally) and enabled/disabled by the existing
          tenants-modules CRUD service.
        body:
          application/json:
            type: TenantModuleDescriptorList
        responses:
          200:
            description: OK
            body:
              application/json:
                type: TenantModuleDescriptorList
            headers:
              X-Okapi-Trace:
                required: false
                description: Okapi trace and timing
          201:
            description: Install job created (async mode)
            body:
              application/json:
                type: TenantModuleDescriptorList
            headers:
              Location:
                description: URI to the install job
              X-Okapi-Trace:
                required: false
                description: Okapi trace and timing
          400:
            description: Bad Request
            body:
              text/plain:
          404:
            description: Not Found
            body:
              text/plain:
          500:
            description: Server Error
            body:
              text/plain:
      /{install_id}:
        get:
          description: Get install job status
          responses:
            200:
              description: OK
              body:
                application/json:
                  type: InstallJob
              headers:
                X-Okapi-Trace:
                  required: false
                  description: Okapi trace and timing
            400:
              description: User error
              body:
                text/plain:
            404:
              description: Not Found
              body:
                text/plain:
            500:
              description: Internal error
              body:
                text/plain:
        delete:
          description: Delete install job
          responses:
            204:
              description: OK
              headers:
                X-Okapi-Trace:
                  required: false
                  description: Okapi trace and timing
            400:
              description: User error
              body:
                text/plain:
            404:
              description: Not Found
              body:
                text/plain:
            500:
              description: Internal error
              body:
                text/plain:
    /upgrade:
      post:
        is: [
          versionFilters,
          installParameters
        ]
        description: Upgrade each module to the latest version. The upgrade is
          rejected if it would violate the interface dependencies of the modules.
          The response is a list of modules that have been enabled, disabled
          or upgraded to perform the upgrade.
        responses:
          200:
            description: OK
            body:
              application/json:
                type: TenantModuleDescriptorList
            headers:
              X-Okapi-Trace:
                required: false
                description: Okapi trace and timing
          201:
            description: Install job created (async mode)
            body:
              application/json:
                type: TenantModuleDescriptorList
            headers:
              Location:
                description: URI to the install job
              X-Okapi-Trace:
                required: false
                description: Okapi trace and timing
          400:
            description: Bad Request
            body:
              text/plain:
          404:
            description: Not Found
            body:
              text/plain:
          500:
            description: Server Error
            body:
              text/plain:
    /interfaces:
      get:
        description: Get all interfaces for tenant
        queryParameters:
          full:
            description: Whether brief or full interface list
            type: boolean
            required: false
            default: false
          type:
            description: Limit by interfaceType
            type: string
            required: false
        responses:
          200:
            headers:
              X-Okapi-Trace:
                required: false
                description: Okapi trace and timing
            body:
              application/json:
                type: InterfaceList
          400:
            description: Client Error
            body:
              text/plain:
          404:
            description: Not Found
            body:
              text/plain:
          500:
            description: Server Error
            body:
              text/plain:
      /{interface_id}:
        get:
          description: Get all modules that provide the specified interface ID
            DEPRECATED. Use /_/proxy/tenants/{tenant_id}/modules?provide={interface_id} instead
          queryParameters:
            type:
              description: Limit by interfaceType
              type: string
              required: false
          responses:
            200:
              headers:
                X-Okapi-Trace:
                  required: false
                  description: Okapi trace and timing
              body:
                application/json:
                  type: TenantModuleDescriptorList
            400:
              description: Client Error
              body:
                text/plain:
            404:
              description: Not Found
              body:
                text/plain:
            500:
              description: Server Error
              body:
                text/plain:
    /timers:
      get:
        description: Get timers for tenant.
        responses:
          200:
            headers:
              X-Okapi-Trace:
                required: false
                description: Okapi trace and timing
            body:
              application/json:
                type: TimerDescriptorList
          400:
            description: Client Error
            body:
              text/plain:
          404:
            description: Not Found
            body:
              text/plain:
          500:
            description: Server Error
            body:
              text/plain:
      patch:
        description: patch timer. Both routingEntry and id must be given.
          The routingEntry.unit, routingEntry.delay and routingEntry.schedule
          determines the new schedule for the timer. Using delay=0 disables
          a timer. Omitting delay, unit and schedule reverts timer back to
          initial values from module.
        body:
          application/json:
            type: TimerDescriptor
        responses:
          204:
            description: Patch OK
            headers:
              X-Okapi-Trace:
                required: false
                description: Okapi trace and timing
          400:
            description: Client Error
            body:
              text/plain:
          404:
            description: Not Found
            body:
              text/plain:
          500:
            description: Server Error
            body:
              text/plain:
      /{timer_id}:
        get:
          description: get timer with id given.
          responses:
            200:
              headers:
                X-Okapi-Trace:
                  required: false
                  description: Okapi trace and timing
              body:
                application/json:
                  type: TimerDescriptor
            400:
              description: Client Error
              body:
                text/plain:
            404:
              description: Not Found
              body:
                text/plain:
            500:
              description: Server Error
              body:
                text/plain:
        patch:
          description: patch timer with routing entry as body. The unit, delay
            and schedule determines the new schedule for the timer. Using delay=0
            disables a timer. Omitting delay, unit and schedule reverts timer back
            to initial values from module.
          body:
            application/json:
              type: RoutingEntry
          responses:
            204:
              description: Patch OK
              headers:
                X-Okapi-Trace:
                  required: false
                  description: Okapi trace and timing
            400:
              description: Client Error
              body:
                text/plain:
            404:
              description: Not Found
              body:
                text/plain:
            500:
              description: Server Error
              body:
                text/plain:
/_/proxy/health:
  description: Health of modules as seen from proxy
  get:
    description: Check health of modules
    responses:
      200:
        description: OK
        body:
          application/json:
            type: HealthStatusList
        headers:
          X-Okapi-Trace:
            required: false
            description: Okapi trace and timing
      500:
        description: Server Error

/_/proxy/pull/modules:
  description: Pull module descriptors from a remote repository
  post:
    description: Pull modules (i.e. Module Descriptors) from a remote
      repository. The PullDescriptor includes one or more URLs. And
      the operation will try all URLs in order until one succeeds. Hence,
      the URLs should be pointing to identical remote repositories.
    body:
      application/json:
        type: PullDescriptor
    responses:
      200:
        description: OK
        headers:
          X-Okapi-Trace:
            required: false
            description: Okapi trace and timing
        body:
          application/json:
            type: ModuleList
      400:
        description: Bad Request
        body:
          text/plain:
      404:
        description: Not Found
        body:
          text/plain:
      500:
        description: Server Error
        body:
          text/plain:

/_/env:
  description: Environment service. Environment variables are system
    variables that allows us to configure modules in a uniform way.
    They can hold fundamental database configuration, etc.
  post:
    description: Add environment entry
    body:
      application/json:
        type: EnvEntry
    responses:
      201:
        description: Created
        headers:
          Location:
            description: URI to the environment entry instance
          X-Okapi-Trace:
            required: false
            description: Okapi trace and timing
        body:
          application/json:
            type: EnvEntry
      400:
        description: Bad Request
        body:
          text/plain:
      500:
        description: Server Error
        body:
          text/plain:
  get:
    description: Get list of all environment variables
    responses:
      200:
        body:
          application/json:
            type: EnvEntryList
        headers:
          X-Okapi-Trace:
            required: false
            description: Okapi trace and timing
      400:
        description: Bad Request
        body:
          text/plain:
      500:
        description: Server Error
        body:
          text/plain:
  /{id}:
    get:
      description: Get info for one environment variable
      responses:
        200:
          body:
            application/json:
              type: EnvEntry
          headers:
            X-Okapi-Trace:
              required: false
              description: Okapi trace and timing
        400:
          description: Bad Request
          body:
            text/plain:
        404:
          description: Not Found
          body:
            text/plain:
        500:
          description: Server Error
          body:
            text/plain:
    delete:
      description: Remove environment variable
      responses:
        204:
          headers:
            X-Okapi-Trace:
              required: false
              description: Okapi trace and timing
        404:
          description: Not Found
          body:
            text/plain:

/_/version:
  description: Service for getting information about Okapi
  get:
    description: Get Okapi version
    responses:
      200:
        description: OK, with version in body
        body:
          text/plain:
        headers:
          X-Okapi-Trace:
            required: false
            description: Okapi trace and timing
      400:
        description: Bad Request
        body:
          text/plain:
      500:
        description: Server Error
        body:
          text/plain:

/_/invoke/tenant/{id}:
  description: |
    Call module with Tenant ID in path. This
    service offers support for systems that need to "call-back" Okapi and
    don't allow setting the Tenant ID in the HTTP header.
  get:
    description: Invoke any service (the rest of the path, any method,
      any response).
    responses:
      200:
        description: OK
        body:
          text/plain:

#TODO implement single module health check
