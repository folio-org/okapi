name: api-doc

# https://dev.folio.org/guides/api-doc/

# API_TYPES: string: The space-separated list of types to consider.
# One or more of 'RAML OAS'.
# e.g. 'OAS'
#
# API_DIRECTORIES: string: The space-separated list of directories to search
# for API description files.
# e.g. 'src/main/resources/openapi'
# NOTE: -- Also add each separate path to each of the "on: paths:" sections.
# e.g. 'src/main/resources/openapi/**'
#
# API_EXCLUDES: string: The space-separated list of directories and files
# to exclude from traversal, in addition to the default exclusions.
# e.g. ''

env:
  API_TYPES: 'RAML'
  API_DIRECTORIES: 'okapi-core/src/main/raml'
  API_EXCLUDES: ''
  OUTPUT_DIR: 'folio-api-docs'
  AWS_S3_BUCKET: 'foliodocs'
  AWS_S3_FOLDER: 'api'
  AWS_S3_REGION: 'us-east-1'
  AWS_S3_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
  AWS_S3_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}

on:
  push:
    branches: [ main, master ]
    paths:
      - 'okapi-core/src/main/raml/**'
    tags: '[vV][0-9]+.[0-9]+.[0-9]+*'

jobs:
  api-doc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.REF }}
          submodules: recursive
      - name: Prepare folio-tools
        run: |
          git clone https://github.com/folio-org/folio-tools
          cd folio-tools/api-doc \
            && yarn install \
            && pip3 install -r requirements.txt
      - name: Obtain version if release tag
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: |
          version=$(echo ${GITHUB_REF#refs/tags/[vV]} | awk -F'.' '{ printf("%d.%d", $1, $2) }')
          echo "VERSION_MAJ_MIN=${version}" >> $GITHUB_ENV
      - name: Set some vars
        run: |
          echo "REPO_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV
      - name: Report some info
        run: |
          echo "REPO_NAME=${{ env.REPO_NAME }}"
      - name: Do api-doc
        run: |
          if test -n "${{ env.VERSION_MAJ_MIN }}"; then
            echo "Docs for release version ${{ env.VERSION_MAJ_MIN }}"
            option_release=$(echo "--version ${{ env.VERSION_MAJ_MIN }}")
          else
            option_release=""
          fi
          python3 folio-tools/api-doc/api_doc.py \
            --loglevel info \
            --types ${{ env.API_TYPES }} \
            --directories ${{ env.API_DIRECTORIES }} \
            --excludes ${{ env.API_EXCLUDES }} \
            --output ${{ env.OUTPUT_DIR }} $option_release
      - name: Show generated files
        working-directory: ${{ env.OUTPUT_DIR }}
        run: ls -R
      - name: Publish to AWS S3
        uses: sai-sharan/aws-s3-sync-action@v0.1.0
        with:
          access_key: ${{ env.AWS_S3_ACCESS_KEY_ID }}
          secret_access_key: ${{ env.AWS_S3_ACCESS_KEY }}
          region: ${{ env.AWS_S3_REGION }}
          source: ${{ env.OUTPUT_DIR }}
          destination_bucket: ${{ env.AWS_S3_BUCKET }}
          destination_prefix: ${{ env.AWS_S3_FOLDER }}
          delete: false
          quiet: false

